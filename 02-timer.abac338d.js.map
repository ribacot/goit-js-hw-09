{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,S,iBAKMC,EAAO,CACXC,WAAYC,SAASC,cAAc,eACnCC,OAAQF,SAASC,cAAc,eAC/BE,QAASH,SAASC,cAAc,gBAChCG,UAAWJ,SAASC,cAAc,kBAClCI,UAAWL,SAASC,cAAc,mBAEpCH,EAAKC,WAAWO,iBAAiB,SA2BjC,SAAiBC,GACf,IAAMC,EAAaC,aAAY,WAC7BC,EAAO,IAAIC,KACXC,EAAUF,EAAKG,UACf,IC3CsBC,EAGlBC,EACAC,EACAC,EDsCEC,EAAOC,EAAeP,EACxBM,EAAO,KACTE,cAAcZ,GC7CMM,ED+CAI,EC5ClBH,EAASM,IAETJ,EAAa,IADbD,EAAOD,MD4CX,IAeqBO,EACfC,EAAMC,EAAOC,EAASC,EAhBtBC,EAKV,SAAwBC,GACtB,IAAK,IAAIC,KAAOD,EACVA,EAAQE,eAAeD,KACzBD,EAAQC,GAAOD,EAAQC,GAAKE,WAAWC,SAAS,EAAG,IAIvD,OAAOJ,C,CAZoBK,CChCpB,CAAEV,KARIW,KAAKC,MAAMrB,EAAKG,GAQdO,MANDU,KAAKC,MAAMrB,EAAMG,EAAOD,GAMhBS,QAJNS,KAAKC,MAAMrB,EAAOG,EAAOD,EAAQD,GAIlBW,QAFfQ,KAAKC,MAAMrB,EAAQG,EAAOD,EAAQD,EAZnC,OD8DPQ,GADeD,EAdLK,GAeVJ,KAAMC,EAA4BF,EAA5BE,MAAOC,EAAqBH,EAArBG,QAASC,EAAYJ,EAAZI,QAC9B5B,EAAKI,OAAOkC,YAAcb,EAC1BzB,EAAKK,QAAQiC,YAAcZ,EAC3B1B,EAAKM,UAAUgC,YAAcX,EAC7B3B,EAAKO,UAAU+B,YAAcV,C,GAlB1B,I,IApCL5B,EAAKC,WAAWsC,UAAW,EAE3B,IAAIlB,EAAe,KAEfT,EAAO,KACPE,EAAU,IAAID,KAEZ2B,EAAU,CACdC,YAAY,EACZC,WAAW,EACXC,YAAa,IAAI9B,KACjB+B,gBAAiB,EACjBC,QAAA,SAAQC,GAGN,IAFAzB,EAAeyB,EAAc,IAEVhC,EACjB,OAAOiC,EAAAC,OAAOC,QAAQ,sCAExBjD,EAAKC,WAAWsC,UAAW,EAC3BQ,EAAAC,OAAOE,QAAQ,iB,IAID,EAAApD,EAAAqD,SAAU,mBAAoBX,E","sources":["src/js/02-timer.js","src/js/convertMs.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport { convertMs } from './convertMs';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  btnStartEl: document.querySelector('[data-start'),\n  daysEl: document.querySelector('[data-days]'),\n  hoursEl: document.querySelector('[data-hours]'),\n  minutesEl: document.querySelector('[data-minutes]'),\n  secondsEl: document.querySelector('[data-seconds]'),\n};\nrefs.btnStartEl.addEventListener('click', onClick);\n\nrefs.btnStartEl.disabled = true;\n\nlet selectedDate = null;\nlet timerTime = null;\nlet date = null;\nlet dateNow = new Date();\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    selectedDate = selectedDates[0];\n\n    if (selectedDate < dateNow) {\n      return Notify.failure('Please choose a date in the future');\n    }\n    refs.btnStartEl.disabled = false;\n    Notify.success('correct choice');\n  },\n};\n\nconst calendars = flatpickr('#datetime-picker', options);\n\nfunction onClick(e) {\n  const intervalId = setInterval(() => {\n    date = new Date();\n    dateNow = date.getTime();\n    const time = selectedDate - dateNow;\n    if (time < 1000) {\n      clearInterval(intervalId);\n    }\n    timerTime = convertMs(time);\n    const timerTimeLeading = addLeadingZero(timerTime);\n    createTextTimer(timerTimeLeading);\n  }, 1000);\n}\n\nfunction addLeadingZero(timeObj) {\n  for (let key in timeObj) {\n    if (timeObj.hasOwnProperty(key)) {\n      timeObj[key] = timeObj[key].toString().padStart(2, 0);\n    }\n  }\n\n  return timeObj;\n}\n\nfunction createTextTimer(timerTimeObj) {\n  const { days, hours, minutes, seconds } = timerTimeObj;\n  refs.daysEl.textContent = days;\n  refs.hoursEl.textContent = hours;\n  refs.minutesEl.textContent = minutes;\n  refs.secondsEl.textContent = seconds;\n}\n\n// function addLeadingZero(timeArr) {\n//   return Object.values(timeArr).map(el => el.toString().padStart(2, 0));\n// }\n\n// function createTextTimer(timerTimeArr) {\n//   refs.daysEl.textContent = timerTimeArr[0];\n//   refs.hoursEl.textContent = timerTimeArr[1];\n//   refs.minutesEl.textContent = timerTimeArr[2];\n//   refs.secondsEl.textContent = timerTimeArr[3];\n// }\n","export function convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n// console.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\n// console.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\n// console.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n\n"],"names":["$dbdyf","parcelRequire","$84b9dae4df53835d$var$refs","btnStartEl","document","querySelector","daysEl","hoursEl","minutesEl","secondsEl","addEventListener","e","intervalId","setInterval","$84b9dae4df53835d$var$date","Date","$84b9dae4df53835d$var$dateNow","getTime","ms","minute","hour","day","time","$84b9dae4df53835d$var$selectedDate","clearInterval","second","timerTimeObj","days","hours","minutes","seconds","timerTimeLeading","timeObj","key","hasOwnProperty","toString","padStart","$84b9dae4df53835d$var$addLeadingZero","Math","floor","textContent","disabled","$84b9dae4df53835d$var$options","enableTime","time_24hr","defaultDate","minuteIncrement","onClose","selectedDates","$h6c0i","Notify","failure","success","default"],"version":3,"file":"02-timer.abac338d.js.map"}
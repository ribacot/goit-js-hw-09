{"mappings":"gfAAAA,EAAA,S,iBA4BA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAgBtC,OAfgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQ,CACNN,WACAC,UAGFM,EAAO,CACLP,WACAC,S,GAGHA,E,IAvCQQ,SAASC,cAAc,SAC/BC,iBAAiB,UAExB,SAAoBC,GAClBA,EAAEC,iBAMF,IALA,IAEmBC,EAAfF,EAAEG,cADJC,SAAYC,EAAKH,EAALb,MAAOiB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAEvBC,EAAeC,OAAOJ,EAAMK,OAEvBC,EAAI,EAAGA,GAAKF,OAAOF,EAAOG,OAAQC,GAAK,EAC9CxB,EAAcwB,EAAGH,GACdI,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MACjByB,EAAAC,OAAOC,QAAQ,sBAAqCC,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,OAC1D6B,QAAQC,IAAI,uBAAwCF,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAE3D+B,OAAM,SAAAP,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAClByB,EAAAC,OAAOM,QAAQ,qBAAoCJ,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,OACzD6B,QAAQC,IAAI,sBAAqCF,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAE3DmB,GAAgBC,OAAOH,EAAKI,M","sources":["src/js/03-promises.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\nformEl.addEventListener('submit', hendleForm);\n\nfunction hendleForm(e) {\n  e.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = e.currentTarget;\n  let delayPromise = Number(delay.value);\n\n  for (let i = 1; i <= Number(amount.value); i += 1) {\n    createPromise(i, delayPromise)\n      .then(({ position, delay }) => {\n        Notify.success(` Fulfilled promise ${position} in ${delay}ms`);\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(` Rejected promise ${position} in ${delay}ms`);\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delayPromise += Number(step.value);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, rejekt) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({\n          position,\n          delay,\n        });\n      } else {\n        rejekt({\n          position,\n          delay,\n        });\n      }\n    }, delay);\n  });\n  return promise;\n}\n"],"names":["parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","rejekt","setTimeout","document","querySelector","addEventListener","e","preventDefault","_elements","currentTarget","elements","delay1","step","amount","delayPromise","Number","value","i","then","param","$h6c0i","Notify","success","concat","console","log","catch","failure"],"version":3,"file":"03-promises.30e21e2b.js.map"}
{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SCAO,SAASC,EAAUC,GAExB,MACMC,EAASC,IACTC,EAAOF,KACPG,EAAa,GAAPD,EAWZ,MAAO,C,KARME,KAAKC,MAAMN,EAAKI,G,MAEfC,KAAKC,MAAMN,EAAMI,EAAOD,G,QAEtBE,KAAKC,MAAMN,EAAOI,EAAOD,EAAQF,G,QAEjCI,KAAKC,MAAMN,EAAQI,EAAOD,EAAQF,EAZnC,K,kBDGjB,MAAMM,EAAO,CACXC,WAAYC,SAASC,cAAc,eACnCC,OAAQF,SAASC,cAAc,eAC/BE,QAASH,SAASC,cAAc,gBAChCG,UAAWJ,SAASC,cAAc,kBAClCI,UAAWL,SAASC,cAAc,mBAEpCH,EAAKC,WAAWO,iBAAiB,SA2BjC,SAAiBC,GACf,MAAMC,EAAaC,aAAY,KAC7BC,EAAO,IAAIC,KACXC,EAAUF,EAAKG,UACf,MAAMC,EAAOC,EAAeH,EACxBE,EAAO,KACTE,cAAcR,GAEhBS,EAAY3B,EAAUwB,IAgB1B,SAAyBI,GACvB,MAAMC,KAAEA,EAAIC,MAAEA,EAAKC,QAAEA,EAAOC,QAAEA,GAAYJ,EAC1CpB,EAAKI,OAAOqB,YAAcJ,EAC1BrB,EAAKK,QAAQoB,YAAcH,EAC3BtB,EAAKM,UAAUmB,YAAcF,EAC7BvB,EAAKO,UAAUkB,YAAcD,C,CAnB3BE,CAIJ,SAAwBC,GACtB,IAAK,IAAIC,KAAOD,EACVA,EAAQE,eAAeD,KACzBD,EAAQC,GAAOD,EAAQC,GAAKE,WAAWC,SAAS,EAAG,IAIvD,OAAOJ,C,CAZoBK,CAAeb,GACP,GAChC,I,IApCLnB,EAAKC,WAAWgC,UAAW,EAE3B,IAAIhB,EAAe,KACfE,EAAY,KACZP,EAAO,KACPE,EAAU,IAAID,KAElB,MAAMqB,EAAU,CACdC,YAAY,EACZC,WAAW,EACXC,YAAa,IAAIxB,KACjByB,gBAAiB,EACjBC,QAAQC,GAGN,GAFAvB,EAAeuB,EAAc,GAEzBvB,EAAeH,EACjB,OAAO2B,EAAAC,OAAOC,QAAQ,sCAExB3C,EAAKC,WAAWgC,UAAW,EAC3BQ,EAAAC,OAAOE,QAAQ,iB,IAID,EAAAtD,EAAAuD,SAAU,mBAAoBX","sources":["src/js/02-timer.js","src/js/convertMs.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport { convertMs } from './convertMs';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  btnStartEl: document.querySelector('[data-start'),\n  daysEl: document.querySelector('[data-days]'),\n  hoursEl: document.querySelector('[data-hours]'),\n  minutesEl: document.querySelector('[data-minutes]'),\n  secondsEl: document.querySelector('[data-seconds]'),\n};\nrefs.btnStartEl.addEventListener('click', onClick);\n\nrefs.btnStartEl.disabled = true;\n\nlet selectedDate = null;\nlet timerTime = null;\nlet date = null;\nlet dateNow = new Date();\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    selectedDate = selectedDates[0];\n\n    if (selectedDate < dateNow) {\n      return Notify.failure('Please choose a date in the future');\n    }\n    refs.btnStartEl.disabled = false;\n    Notify.success('correct choice');\n  },\n};\n\nconst calendars = flatpickr('#datetime-picker', options);\n\nfunction onClick(e) {\n  const intervalId = setInterval(() => {\n    date = new Date();\n    dateNow = date.getTime();\n    const time = selectedDate - dateNow;\n    if (time < 1000) {\n      clearInterval(intervalId);\n    }\n    timerTime = convertMs(time);\n    const timerTimeLeading = addLeadingZero(timerTime);\n    createTextTimer(timerTimeLeading);\n  }, 1000);\n}\n\nfunction addLeadingZero(timeObj) {\n  for (let key in timeObj) {\n    if (timeObj.hasOwnProperty(key)) {\n      timeObj[key] = timeObj[key].toString().padStart(2, 0);\n    }\n  }\n\n  return timeObj;\n}\n\nfunction createTextTimer(timerTimeObj) {\n  const { days, hours, minutes, seconds } = timerTimeObj;\n  refs.daysEl.textContent = days;\n  refs.hoursEl.textContent = hours;\n  refs.minutesEl.textContent = minutes;\n  refs.secondsEl.textContent = seconds;\n}\n\n// function addLeadingZero(timeArr) {\n//   return Object.values(timeArr).map(el => el.toString().padStart(2, 0));\n// }\n\n// function createTextTimer(timerTimeArr) {\n//   refs.daysEl.textContent = timerTimeArr[0];\n//   refs.hoursEl.textContent = timerTimeArr[1];\n//   refs.minutesEl.textContent = timerTimeArr[2];\n//   refs.secondsEl.textContent = timerTimeArr[3];\n// }\n","export function convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n// console.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\n// console.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\n// console.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n\n"],"names":["$fbklV","parcelRequire","$c2637b40b2739efa$export$87dec41e1543559d","ms","minute","second","hour","day","Math","floor","$40d383fb392a7037$var$refs","btnStartEl","document","querySelector","daysEl","hoursEl","minutesEl","secondsEl","addEventListener","e","intervalId","setInterval","$40d383fb392a7037$var$date","Date","$40d383fb392a7037$var$dateNow","getTime","time","$40d383fb392a7037$var$selectedDate","clearInterval","$40d383fb392a7037$var$timerTime","timerTimeObj","days","hours","minutes","seconds","textContent","$40d383fb392a7037$var$createTextTimer","timeObj","key","hasOwnProperty","toString","padStart","$40d383fb392a7037$var$addLeadingZero","disabled","$40d383fb392a7037$var$options","enableTime","time_24hr","defaultDate","minuteIncrement","onClose","selectedDates","$iQIUW","Notify","failure","success","default"],"version":3,"file":"02-timer.7234fd96.js.map"}